#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//char retornaChar();
int operacoes();
void incluir();
void excluir();
int pesquisaCod(int x);
void mostraFinal();

/*

Passo 1 - Fazer a leitura de produtos para colocar no estoque. As informações de cada produto são um código numérico, uma descrição, quantidade de itens e o valor unitário de cada item. Deverão ser 
lidos 10 produtos diferentes;

Passo 2 - A partir da leitura inicial, poderão ser realizadas as seguintes operações:

- Inclusão de novos itens no estoque, para produtos já cadastrados anteriormente no primeiro passo. 

->> Nesse momento basta que seja lido o código do produto e quantos itens deseja-se inserir. 
Após isso, atualizar a quantidade de itens no estoque.

- Retirada de tens no estoque. Nesse momento basta que seja lido o código do produto e quantos itens deseja-se retirar. 
Caso a quantidade a ser retirada for maior do que atual em estoque, deve ser dada uma mensagem dizendo "Estoque Insuficiente". Caso contrário atualizar a quantidade em estoque.

As operações do passo 2 serão realizados dentro de uma estrutura de repetição, sempre fazendo a leitura do tipo de operação desejada: "I" ou "R", Inclusão ou Retirada. Quando for digitada uma operação diferente 
ssas duas, a repetição deve finalizar.

Passo 3 - Após a finalização do passo 2, deve-se mostrar na tela:

- a quantidade atual em estoque de cada um dos 10 produtos (quantidade de itens de cada produto e o valor total em estoque de cada produto).

- valor total do estoque (a soma dos valores totais de cada produto).

*/

/*
Vincular uma agenda de clientes juntamente ao estoque com pedidos e atualizações 
*/

char desc [100];
char c;
int codigo[10];	
int quantia[10];
int i;

int main(){		
	int escolha;
	
	printf("Inserir Produtos\n");
	for (i=0;i<10;i++){
		printf("codigo do produto[%d]: ",i+1);
		scanf("%d",&codigo[i]);

		printf("descricao do produto[%d]: ",i+1);
		//retornaChar();
		getchar();
		fgets(desc,100,stdin);		

		printf("valor do produto[%d]: ",i+1);
		scanf("%d",&quantia[i]);
		
		printf("\n");
	}
	do{
		escolha = operacoes();
	}while(escolha == 1 || escolha == 2);

	return 0;
}

int pesquisaCod(int x){
	int i, posCod = -1;
	for(i = 0; i<10;i++){
		if(codigo[i] == x)
			posCod = i;
	}
	return posCod;
}


void incluir(){
	int valorAdd, cod, posCod;
	printf("Qual o codigo do produto? ");
	scanf("%d",&cod);

	posCod = pesquisaCod(cod);

	if(posCod < 0){
		printf("Codigo Inexistente\n");
	}
	else {
		printf("Quantos itens deseja adicionar ao produto? ");
		scanf("%d",&valorAdd);
		printf("\n");
		quantia[posCod] += valorAdd;
	}
	
}

void excluir(){
	int valorSubt, cod, posCod;
	printf("\n");
	printf("Qual o codigo do produto?\n ");
	scanf("%d",&cod);

	posCod = pesquisaCod(cod);

	if(posCod < 0){
		printf("Codigo Inexistente\n");
	}
	else{
		printf("Quantos itens deseja retirar do produto?\n ");
		scanf("%d",&valorSubt);

		
		if(valorSubt > quantia[posCod]){
			printf("Estoque Insuficiente");
		}
		else{
			quantia[posCod] -= valorSubt;
		}	
	}
}

int operacoes(){
	int opt;
	printf("Operações:\n");
	printf("1- Incluir novos itens no estoque\n");
	printf("2- Retirar itens\n");
	
	scanf("%d",&opt);
		switch(opt){
			case 1:
				incluir();
			break;
			
			case 2:
				excluir();
			break;
			default:
				mostraFinal();
			break;			
		}	
		return opt;	
}

void mostraFinal(){
	int i, totalEstoque = 0;
	for(i = 0; i < 10;i++){
		printf("\n----------------------\n");
		printf("Produto Codigo [ %d ]\n", codigo[i]);
		printf("Quantia em estoque [ %d ]\n",quantia[i]);
		printf("----------------------\n");

		totalEstoque += quantia[i];
	}

	printf("\n\n----------------------\n");	
	printf("Quantia Total de Produtos [ %d ]\n",totalEstoque);
	printf("----------------------\n");
}






/*
char retornaChar(){
	
	int j;
	for(j=0;c!='\n' && j<100;j++){			
			scanf("%c[^\n]",&c);	
			if(c != '\n')	
				desc[j]	= c;
		}	
		return desc[j];
}*/

